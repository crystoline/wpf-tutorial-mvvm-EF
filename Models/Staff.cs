//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.ComponentModel.DataAnnotations;
using System.Linq;

namespace DBApp1.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations.Schema;

    [Table("Staff")]
    public partial class Staff
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Staff()
        {
            this.StaffGroups = new HashSet<StaffGroup>();
        }

        public string FullName
        {
            get { return LastName + " " + FirstName + " " + OtherNames; }
        }

        public int Id { get; set; }
        public string LastName { get; set; }
        public string FirstName { get; set; }
        public string OtherNames { get; set; }
        public string Gender { get; set; }
        public Nullable<System.DateTime> Dob { get; set; }
        public Nullable<System.DateTime> CreatedAt { get; set; }
        public Nullable<System.DateTime> UpdatedAt { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
       
        public virtual ICollection<StaffGroup> StaffGroups { get; set; }

        //public virtual List<Group> Groups
        //{
        //    get
        //    {
        //        return (from StaffGroup staffGroup in this.StaffGroups select staffGroup.Group).ToList();
        //    }
        //}

        public virtual List<int?> GroupIds
        {
            get
            {
                var groups = StaffGroups.Select(x => x.GroupId ).ToList();
                return groups;
            }
        }
    }
}
